#!/bin/bash
# Times execution of file and outputs results (ignores invalid options).
# Usage: ./telemetry -[c|f|s] [arg] ...
# Options:
#   -c: Number of times to run program (defaults to 100).
#   -f: Path to executable file to test.
#   -s: Precision of the result (defaults to length of count + 2).

echoerr() {
    >&2 echo $@
}

exiterr() {
    echoerr "Error: " $@
    exit 1
}

testnumber() {
    return $( [ "$1" -eq "$1" ] 2>/dev/null )
}

while getopts ":c:f:s:" opt; do
    case $opt in
        c)
            if testnumber "$OPTARG"; then
                count=$OPTARG
            else
                exiterr "Count must be a number."
            fi
            ;;
        f)
            if [ -x $OPTARG ]; then
                file=$OPTARG
            else
                exiterr "File must be executable."
            fi
            ;;
        s)
            if testnumber "$OPTARG"; then
                scale=$OPTARG
            else
                exiterr "Scale must be a number."
            fi
            ;;
    esac
done

if [ -z $count ]; then
    count=1000
fi

if [ -z $file ]; then
    file=./out

    if ! [ -x $file ]; then
        exiterr "No executable found."
    fi
fi

if [ -z $scale ]; then
    scale=$(( `printf "$count" | wc -c` + 2 ))
fi

result=`{ time for i in $(seq $count); do $file 1>/dev/null; done; } 2>&1 |\
            grep real |\
            grep -Po "\d+m\d+\.\d+"`
minutes=`echo "$result" |\
            grep -Po "^\d+"`
seconds=`echo "$result" |\
            grep -Po "m.+" |\
            sed 's/m//' |\
            xargs echo "$minutes*60+" |\
            bc |\
            xargs echo "scale=$scale; $count^-1*" |\
            bc`

echo "Total time taken: ${result}s"
echo "Average time per execution: ${seconds}s"
